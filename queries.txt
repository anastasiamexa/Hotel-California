-- (a) Πόσες κρατήσεις αντιστοιχούν σε κάθε κατηγορία δωματίων.
SELECT COUNT(reservation_id),category
FROM rooms INNER JOIN  reserved_rooms 
ON rooms.id = reserved_rooms.room_id
GROUP BY category;

-- (b) Ποια κατηγορία δωματίων παρουσιάζει βάσει των κρατήσεων τον μεγαλύτερο τζίρο.
WITH sum AS (SELECT SUM(transactions.total_cost) AS total_sum , category
FROM rooms INNER JOIN reserved_rooms ON rooms.id = reserved_rooms.room_id INNER JOIN transactions
ON reserved_rooms.reservation_id = transactions.reservation_id GROUP BY category)
SELECT *
FROM sum 
WHERE total_sum = (SELECT MAX(total_sum) FROM sum);

-- (c) Πόσα δωμάτια είναι προς το παρόν διαθέσιμα προς κράτηση.
SELECT  COUNT(room_id) AS number_of_available_rooms
FROM    rooms INNER JOIN reserved_rooms ON rooms.id = reserved_rooms.room_id
INNER JOIN reservations ON reserved_rooms.reservation_id = reservations.id
WHERE NOT (date_in <= CURRENT_DATE AND date_out >= CURRENT_DATE);

-- (d) Ποιες παροχές (facilities) διατίθενται σε συγκεκριμένα δωμάτια.
SELECT id, all_inclusive, breakfast, dinner, smoking, sea_view FROM ROOMS 
WHERE all_inclusive = 'true' OR breakfast= 'true' OR dinner = 'true' 
OR smoking = 'true' OR sea_view = 'true';

-- (e) Ποιοι επισκέπτες έχουν κράτηση αυτό το μήνα.
SELECT guests.id, fullname, date_in
FROM guests INNER JOIN transactions ON guests.customer_id = transactions.customer_id
INNER JOIN reservations ON transactions.reservation_id = reservations.id
WHERE date_part('month',date_in) = date_part('month',CURRENT_DATE) 
AND date_part('year',date_in) = date_part('year',CURRENT_DATE);

-- (f) Ποιο είναι το μέσο κέρδος ανά τύπο/κατηγορία δωματίου για τη θερινή σεζόν
SELECT CAST(AVG(total_cost) AS DECIMAL(10,2)),rooms.category
FROM reservations INNER JOIN transactions ON reservations.id = transactions.reservation_id
INNER JOIN reserved_rooms ON transactions.reservation_id = reserved_rooms.reservation_id
INNER JOIN rooms ON rooms.id = reserved_rooms.reservation_id
WHERE date_part('month',date_in) = '06' OR
date_part('month',date_in) = '07' OR
date_part('month',date_in) = '08'
GROUP BY rooms.category;

-- (g) Ποιος είναι ο πελάτης με τις περισσότερες κρατήσεις ανά εύρος ζώνης τιμής δωματίου.
(WITH max AS (SELECT customer_id, COUNT(financial_zone) AS max_reservations,financial_zone
FROM rooms INNER JOIN reserved_rooms ON rooms.id = reserved_rooms.room_id
INNER JOIN transactions ON transactions.reservation_id = reserved_rooms.reservation_id
WHERE financial_zone = 'low' 
GROUP BY customer_id,financial_zone)
SELECT customer_id, max_reservations,financial_zone
FROM max
WHERE max_reservations = (SELECT MAX(max_reservations) FROM max))
UNION
(WITH max AS (SELECT customer_id, COUNT(financial_zone) AS max_reservations,financial_zone
FROM rooms INNER JOIN reserved_rooms ON rooms.id = reserved_rooms.room_id
INNER JOIN transactions ON transactions.reservation_id = reserved_rooms.reservation_id
WHERE financial_zone = 'medium' 
GROUP BY customer_id,financial_zone)
SELECT customer_id, max_reservations,financial_zone
FROM max
WHERE max_reservations = (SELECT MAX(max_reservations) FROM max))
UNION
(WITH max AS (SELECT customer_id, COUNT(financial_zone) AS max_reservations,financial_zone
FROM rooms INNER JOIN reserved_rooms ON rooms.id = reserved_rooms.room_id
INNER JOIN transactions ON transactions.reservation_id = reserved_rooms.reservation_id
WHERE financial_zone = 'high' 
GROUP BY customer_id,financial_zone)
SELECT customer_id, max_reservations,financial_zone
FROM max
WHERE max_reservations = (SELECT MAX(max_reservations) FROM max));
                    	
-- (h) Ποια δωμάτια ενοικιάστηκαν από την ημερομηνία “X” έως και σήμερα.
SELECT room_id , date_in, date_out
FROM reserved_rooms INNER JOIN reservations ON reserved_rooms.reservation_id = reservations.id
WHERE date_in <= CURRENT_DATE AND date_in >= '2017-06-28' ORDER BY room_id;